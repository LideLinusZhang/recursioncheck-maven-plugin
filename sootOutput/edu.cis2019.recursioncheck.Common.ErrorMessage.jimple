public final enum class edu.cis2019.recursioncheck.Common.ErrorMessage extends java.lang.Enum
{
    public static final enum edu.cis2019.recursioncheck.Common.ErrorMessage NO_BASE_CASE;
    public static final enum edu.cis2019.recursioncheck.Common.ErrorMessage MUTUAL_RECURSIVE_WARNING;
    public static final enum edu.cis2019.recursioncheck.Common.ErrorMessage PARAMETERS_UNCHANGED;
    private java.lang.String errorMessage;
    private static final edu.cis2019.recursioncheck.Common.ErrorMessage[] $VALUES;

    public static edu.cis2019.recursioncheck.Common.ErrorMessage[] values()
    {
        edu.cis2019.recursioncheck.Common.ErrorMessage[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <edu.cis2019.recursioncheck.Common.ErrorMessage: edu.cis2019.recursioncheck.Common.ErrorMessage[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (edu.cis2019.recursioncheck.Common.ErrorMessage[]) $r1;

        return $r2;
    }

    public static edu.cis2019.recursioncheck.Common.ErrorMessage valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        edu.cis2019.recursioncheck.Common.ErrorMessage $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Ledu/cis2019/recursioncheck/Common/ErrorMessage;", r0);

        $r2 = (edu.cis2019.recursioncheck.Common.ErrorMessage) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        edu.cis2019.recursioncheck.Common.ErrorMessage r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: edu.cis2019.recursioncheck.Common.ErrorMessage;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<edu.cis2019.recursioncheck.Common.ErrorMessage: java.lang.String errorMessage> = r2;

        return;
    }

    public java.lang.String getErrorMessage()
    {
        edu.cis2019.recursioncheck.Common.ErrorMessage r0;
        java.lang.String $r1;

        r0 := @this: edu.cis2019.recursioncheck.Common.ErrorMessage;

        $r1 = r0.<edu.cis2019.recursioncheck.Common.ErrorMessage: java.lang.String errorMessage>;

        return $r1;
    }

    static void <clinit>()
    {
        edu.cis2019.recursioncheck.Common.ErrorMessage $r0, $r1, $r2, $r4, $r5, $r6;
        edu.cis2019.recursioncheck.Common.ErrorMessage[] $r3;

        $r0 = new edu.cis2019.recursioncheck.Common.ErrorMessage;

        specialinvoke $r0.<edu.cis2019.recursioncheck.Common.ErrorMessage: void <init>(java.lang.String,int,java.lang.String)>("NO_BASE_CASE", 0, "Definite infinite recursion: This recursive method contains no base case");

        <edu.cis2019.recursioncheck.Common.ErrorMessage: edu.cis2019.recursioncheck.Common.ErrorMessage NO_BASE_CASE> = $r0;

        $r1 = new edu.cis2019.recursioncheck.Common.ErrorMessage;

        specialinvoke $r1.<edu.cis2019.recursioncheck.Common.ErrorMessage: void <init>(java.lang.String,int,java.lang.String)>("MUTUAL_RECURSIVE_WARNING", 1, "Possible infinite recursion: This method may be mutually recursive with another method");

        <edu.cis2019.recursioncheck.Common.ErrorMessage: edu.cis2019.recursioncheck.Common.ErrorMessage MUTUAL_RECURSIVE_WARNING> = $r1;

        $r2 = new edu.cis2019.recursioncheck.Common.ErrorMessage;

        specialinvoke $r2.<edu.cis2019.recursioncheck.Common.ErrorMessage: void <init>(java.lang.String,int,java.lang.String)>("PARAMETERS_UNCHANGED", 2, "Possible infinite recursion: Parameters are unchanged from initial call to recursive call");

        <edu.cis2019.recursioncheck.Common.ErrorMessage: edu.cis2019.recursioncheck.Common.ErrorMessage PARAMETERS_UNCHANGED> = $r2;

        $r3 = newarray (edu.cis2019.recursioncheck.Common.ErrorMessage)[3];

        $r4 = <edu.cis2019.recursioncheck.Common.ErrorMessage: edu.cis2019.recursioncheck.Common.ErrorMessage NO_BASE_CASE>;

        $r3[0] = $r4;

        $r5 = <edu.cis2019.recursioncheck.Common.ErrorMessage: edu.cis2019.recursioncheck.Common.ErrorMessage MUTUAL_RECURSIVE_WARNING>;

        $r3[1] = $r5;

        $r6 = <edu.cis2019.recursioncheck.Common.ErrorMessage: edu.cis2019.recursioncheck.Common.ErrorMessage PARAMETERS_UNCHANGED>;

        $r3[2] = $r6;

        <edu.cis2019.recursioncheck.Common.ErrorMessage: edu.cis2019.recursioncheck.Common.ErrorMessage[] $VALUES> = $r3;

        return;
    }
}
